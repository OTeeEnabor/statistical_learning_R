x <- c(1,3,2,5)
# Basic comands */
x <- c(1,3,2,5)
y <- c(1,4,3)
ls()
x <- c(1,3,2,5)
y <- c(1,4,3)
x <-rnorm(100)
y <- rnorm(100)
plot(x,y)
plot(x, y,
xlab= "dependent variable",
ylab="independent variable",
main="Plot of Dependent vs independent")
pdf("figure.pdf")
plot(x,y,col="green")
dev.off()
?contour()
?outer()
x <- seq(-pi,pi,length=100)
y <- x
f <- outer(x,y, function(x,y) cos(y) / (1+x^2))
contour(x,y, f)
contour(x,y, f, nlevels = 45, add = T)
contour(x,y, f, nlevels = 45, add = T)
fa <- (f-t(f)) /2
contour(x, y, fa, nlevels=15)
image(x, y, fa)
persp(x,y, fa)
# matrix
A <- matrix(1:16,nrow = 4, ncol = 4)
A
college <- read.csv("../data/College.csv")
college <- read.csv("data/College.csv")
View(college)
rownames(college) <- college[,1]
View(college)
# remove the name college
college <- college[,-1]
# use summary function to produce numerical
# summary of the variables in the dataset
summary(college)
# produce a scatterplot matrix of the first 10 columns
pairs(college[,1:10])
pairs(college[,1:10])
college
head(college)
pairs(college[,1:10])
str(college)
pairs(college[,2:10])
pairs(College[,1:10])
pairs(college[,1:10])
pairs(college[, 1:10])
library(ISLR)
library(ISLR)
library(ISLR)
data("College")
pairs(College[, 1:10])
data("College")
pairs(College[, 1:10])
boxplot(College[, i] ~ College[, 1], xlab="", main=colnames(College)[i])
for (i in 2:17)
par(mfrow=c(4,4), mar=c(2,2,1,0))
for (i in 2:17)
boxplot(College[, i] ~ College[, 1], xlab="", main=colnames(College)[i])
Auto<- read.table("data/Auto.data")
Auto <- read.table("data/Auto.data")
Auto <- read.table("data/Auto.data","rt")
Auto <- read.table("data/Auto.data","rt")
Auto <- read.table("Auto.data")
Auto <- read.table("Auto.data")
read.table("Auto.data")
read.table("Auto.data")
read.table("Auto.csv")
read.table("../Auto.csv")
# display the current working directory
getwd()
#read.table("../Auto.csv")
# display the current working directory
getwd()
# read
read.table("../data/Auto.csv")
# display the current working directory
getwd()
# read
read.table("../data/Auto.data")
Auto <- read.table("../data/Auto.data", header=TRUE, na.strings="?", stringsAsFactors = TRUE)
Auto <- read.table("../data/Auto.data", header=TRUE, na.strings="?", stringsAsFactors = TRUE)
# view the Auto data frame
View(Auto)
Auto <- read.table("../data/Auto.data", header=TRUE, na.strings="?", stringsAsFactors = TRUE)
# view the Auto data frame
View(Auto)
# check the dimensions of the dataset - number of observations and variables
dim(Auto)
Head(Auto)
# remove the missing values in Auto using the na.omit method
Auto <- na.omit(Auto)
dim(Auto)
names(Auto)
summary(Auto)
# plot a scatterplot to show the relationship between cyclinders and mpg
plot(Auto$cylinders, Auto$mpg)
# attach Auto to make the variables accessible by name
#attach(AUto)
#plot(cylinders,mpg)
# attach Auto
attah(Auto)
# attach Auto
attach(Auto)
# change cylinders to a qualitative variable
cylinders <- as.factor(cylinders)
# plot relationship between cylinders and mpg
plot(cylinders, mpg)
```{r}
# attach Auto
attach(Auto)
# change cylinders to a qualitative variable
cylinders <- as.factor(cylinders)
# plot relationship between cylinders and mpg
plot(cylinders, mpg)
# attach Auto
attach(Auto)
# change cylinders to a qualitative variable
cylinders <- as.factor(cylinders)
# plot relationship between cylinders and mpg
plot(cylinders, mpg
col="red", varwidth="T",
# attach Auto
attach(Auto)
# change cylinders to a qualitative variable
cylinders <- as.factor(cylinders)
# plot relationship between cylinders and mpg
plot(cylinders, mpg,
col="red", varwidth="T",
xlab="cylinders", ylab="MPG")
# attach Auto
attach(Auto)
# change cylinders to a qualitative variable
cylinders <- as.factor(cylinders)
# plot relationship between cylinders and mpg
plot(cylinders, mpg,
col="red", varwidth=TRUE,
xlab="cylinders", ylab="MPG")
hist(mpg, col=2, breaks=15)
pairs(Auto)
pairs(
~mpg + displacement + horsepower + weight + acceleration,
data=Auto
)
plot(horsepower, mpg)
identify(horsepower, mpg, name)
identify(horsepower, mpg, name)
plot(horsepower, mpg)
identify(horsepower, mpg, name)
plot(horsepower, mpg)
identify(horsepower, mpg, name)
identify(horsepower, mpg, name)
plot(horsepower, mpg)
identify(horsepower, mpg, name)
